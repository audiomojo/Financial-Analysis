{"ast":null,"code":"var _jsxFileName = \"/Users/rich/Data/Source Code/Personal/Node/Financial Analysis/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [monthlyTotals, setMonthlyTotals] = useState(null);\n  useEffect(() => {\n    // Fetch the monthly totals data from the backend API\n    axios.get('/api/analysis/getMonthlyTotals').then(response => {\n      setMonthlyTotals(response.data);\n    }).catch(error => {\n      console.error('Error fetching monthly totals:', error);\n    });\n  }, []);\n  const formatCurrency = amount => {\n    return `$${amount.toFixed(2)}`; // Format amount with $ sign and two decimal places\n  };\n\n  // Calculate the average of non-zero monthly totals\n  const calculateAverage = () => {\n    if (!monthlyTotals) return 0;\n    const nonZeroTotals = Object.values(monthlyTotals).filter(total => total > 0);\n    const totalSum = nonZeroTotals.reduce((sum, total) => sum + total, 0);\n    return nonZeroTotals.length > 0 ? totalSum / nonZeroTotals.length : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        textAlign: 'center',\n        padding: '20px',\n        fontSize: '24px',\n        fontWeight: 'bold'\n      },\n      children: \"Financial Expense Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets-container\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        backgroundColor: '#e0f7fa',\n        // Light blue background\n        padding: '20px',\n        borderRadius: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget\",\n        style: {\n          width: '500px',\n          margin: '10px',\n          padding: '20px',\n          backgroundColor: '#e0f7fa',\n          // Light blue background for the table\n          borderRadius: '10px',\n          display: 'flex',\n          flexDirection: 'column',\n          // Allow stacking the table and the footer\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            maxWidth: '350px' // Limit the maximum width of the table to avoid spreading apart\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"Monthly Totals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), monthlyTotals ? /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%',\n              textAlign: 'left',\n              borderCollapse: 'collapse',\n              tableLayout: 'auto',\n              // Allow table columns to size based on content\n              margin: '0 auto' // Center the table horizontally\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.entries(monthlyTotals).filter(([month, total]) => total > 0) // Filter out totals less than or equal to zero\n              .map(([month, total]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontWeight: 'bold',\n                    color: 'black',\n                    padding: '10px'\n                  },\n                  children: month\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    color: 'black',\n                    padding: '10px',\n                    textAlign: 'right',\n                    whiteSpace: 'nowrap' // Prevent the amount from breaking into a new line\n                  },\n                  children: formatCurrency(total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this)]\n              }, month, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this) : 'Loading...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#90caf9',\n            // Medium blue background\n            padding: '15px',\n            borderRadius: '8px',\n            marginTop: '20px',\n            textAlign: 'center',\n            fontWeight: 'bold',\n            color: 'black'\n          },\n          children: [\"Average Monthly Expense: \", formatCurrency(calculateAverage())]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"MJPEmbctk9CVCiets9cI9++tOtA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","monthlyTotals","setMonthlyTotals","get","then","response","data","catch","error","console","formatCurrency","amount","toFixed","calculateAverage","nonZeroTotals","Object","values","filter","total","totalSum","reduce","sum","length","className","children","style","textAlign","padding","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","backgroundColor","borderRadius","width","margin","flexDirection","maxWidth","borderCollapse","tableLayout","entries","month","map","color","whiteSpace","marginTop","_c","$RefreshReg$"],"sources":["/Users/rich/Data/Source Code/Personal/Node/Financial Analysis/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const [monthlyTotals, setMonthlyTotals] = useState(null);\n\n    useEffect(() => {\n        // Fetch the monthly totals data from the backend API\n        axios.get('/api/analysis/getMonthlyTotals').then(response => {\n            setMonthlyTotals(response.data);\n        }).catch(error => {\n            console.error('Error fetching monthly totals:', error);\n        });\n    }, []);\n\n    const formatCurrency = (amount) => {\n        return `$${amount.toFixed(2)}`;  // Format amount with $ sign and two decimal places\n    };\n\n    // Calculate the average of non-zero monthly totals\n    const calculateAverage = () => {\n        if (!monthlyTotals) return 0;\n        const nonZeroTotals = Object.values(monthlyTotals).filter(total => total > 0);\n        const totalSum = nonZeroTotals.reduce((sum, total) => sum + total, 0);\n        return nonZeroTotals.length > 0 ? totalSum / nonZeroTotals.length : 0;\n    };\n\n    return (\n        <div className=\"App\">\n            <header style={{ textAlign: 'center', padding: '20px', fontSize: '24px', fontWeight: 'bold' }}>\n                Financial Expense Analysis\n            </header>\n\n            <div className=\"widgets-container\" style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                backgroundColor: '#e0f7fa',  // Light blue background\n                padding: '20px',\n                borderRadius: '10px'\n            }}>\n                <div className=\"widget\" style={{\n                    width: '500px',\n                    margin: '10px',\n                    padding: '20px',\n                    backgroundColor: '#e0f7fa',  // Light blue background for the table\n                    borderRadius: '10px',\n                    display: 'flex',\n                    flexDirection: 'column',  // Allow stacking the table and the footer\n                    justifyContent: 'space-between'\n                }}>\n                    <div style={{\n                        width: '100%',\n                        maxWidth: '350px',  // Limit the maximum width of the table to avoid spreading apart\n                    }}>\n                        <h3 style={{ textAlign: 'center' }}>Monthly Totals</h3>\n\n                        {monthlyTotals ? (\n                            <table style={{\n                                width: '100%',\n                                textAlign: 'left',\n                                borderCollapse: 'collapse',\n                                tableLayout: 'auto',  // Allow table columns to size based on content\n                                margin: '0 auto'  // Center the table horizontally\n                            }}>\n                                <tbody>\n                                {Object.entries(monthlyTotals)\n                                    .filter(([month, total]) => total > 0)  // Filter out totals less than or equal to zero\n                                    .map(([month, total]) => (\n                                        <tr key={month}>\n                                            <td style={{\n                                                fontWeight: 'bold',\n                                                color: 'black',\n                                                padding: '10px'\n                                            }}>\n                                                {month}\n                                            </td>\n                                            <td style={{\n                                                color: 'black',\n                                                padding: '10px',\n                                                textAlign: 'right',\n                                                whiteSpace: 'nowrap'  // Prevent the amount from breaking into a new line\n                                            }}>\n                                                {formatCurrency(total)}\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n                        ) : (\n                            'Loading...'\n                        )}\n                    </div>\n\n                    {/* Footer for average monthly expense */}\n                    <div style={{\n                        backgroundColor: '#90caf9',  // Medium blue background\n                        padding: '15px',\n                        borderRadius: '8px',\n                        marginTop: '20px',\n                        textAlign: 'center',\n                        fontWeight: 'bold',\n                        color: 'black'\n                    }}>\n                        Average Monthly Expense: {formatCurrency(calculateAverage())}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}