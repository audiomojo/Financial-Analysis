{"ast":null,"code":"var _jsxFileName = \"/Users/rich/Data/Source Code/Personal/Node/Financial Analysis/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [monthlyTotals, setMonthlyTotals] = useState(null);\n  useEffect(() => {\n    // Fetch the monthly totals data from the backend API\n    axios.get('/api/analysis/getMonthlyTotals').then(response => {\n      setMonthlyTotals(response.data);\n    }).catch(error => {\n      console.error('Error fetching monthly totals:', error);\n    });\n  }, []);\n\n  // Format amount with $ sign and two decimal places\n  const formatCurrency = amount => {\n    return `$${amount.toFixed(2)}`;\n  };\n\n  // Calculate the running average for the months with non-zero totals\n  const calculateRunningAverage = () => {\n    if (!monthlyTotals) return [];\n    const runningAverages = [];\n    let totalSum = 0;\n    let count = 0;\n    Object.values(monthlyTotals).forEach(total => {\n      if (total > 0) {\n        totalSum += total;\n        count++;\n        runningAverages.push(totalSum / count); // Calculate running average\n      } else {\n        runningAverages.push(null); // Use null to not display points for zero months\n      }\n    });\n    return runningAverages;\n  };\n\n  // Prepare chart data\n  const prepareChartData = () => {\n    if (!monthlyTotals) return {};\n    const labels = Object.keys(monthlyTotals); // Month names as labels\n    const data = Object.values(monthlyTotals).map(total => total > 0 ? total : 0); // Bar chart data\n\n    return {\n      labels: labels,\n      datasets: [{\n        label: 'Monthly Totals',\n        data: data,\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n        // Light blue color for bars\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n        type: 'bar'\n      }, {\n        label: 'Running Average',\n        data: calculateRunningAverage(),\n        borderColor: 'rgba(255, 99, 132, 1)',\n        // Red line for running average\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderWidth: 2,\n        fill: false,\n        type: 'line',\n        tension: 0.3,\n        // Smoothness of the line\n        pointRadius: 3\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: {\n        textAlign: 'center',\n        padding: '20px',\n        fontSize: '24px',\n        fontWeight: 'bold'\n      },\n      children: \"Financial Expense Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets-container\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        gap: '20px' // Space between the widgets\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget\",\n        style: {\n          width: '500px',\n          height: '500px',\n          backgroundColor: '#e0f7fa',\n          // Light blue background\n          borderRadius: '10px',\n          padding: '20px',\n          overflow: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Monthly Totals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), monthlyTotals ? /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: '100%',\n            textAlign: 'left',\n            borderCollapse: 'collapse',\n            tableLayout: 'auto',\n            margin: '0 auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.entries(monthlyTotals).filter(([month, total]) => total > 0) // Filter out totals less than or equal to zero\n            .map(([month, total]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  fontWeight: 'bold',\n                  color: 'black',\n                  padding: '10px'\n                },\n                children: month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  color: 'black',\n                  padding: '10px',\n                  textAlign: 'right',\n                  whiteSpace: 'nowrap'\n                },\n                children: formatCurrency(total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this)]\n            }, month, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget\",\n        style: {\n          width: '500px',\n          height: '500px',\n          backgroundColor: '#e0f7fa',\n          // Light blue background for the widget\n          borderRadius: '10px',\n          padding: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Monthly Totals with Running Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), monthlyTotals ? /*#__PURE__*/_jsxDEV(Bar, {\n          data: prepareChartData(),\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  callback: function (value) {\n                    return `$${value.toFixed(2)}`; // Format Y-axis labels as currency\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"MJPEmbctk9CVCiets9cI9++tOtA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","App","_s","monthlyTotals","setMonthlyTotals","get","then","response","data","catch","error","console","formatCurrency","amount","toFixed","calculateRunningAverage","runningAverages","totalSum","count","Object","values","forEach","total","push","prepareChartData","labels","keys","map","datasets","label","backgroundColor","borderColor","borderWidth","type","fill","tension","pointRadius","className","children","style","textAlign","padding","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","gap","width","height","borderRadius","overflow","borderCollapse","tableLayout","margin","entries","filter","month","color","whiteSpace","options","scales","y","beginAtZero","ticks","callback","value","_c","$RefreshReg$"],"sources":["/Users/rich/Data/Source Code/Personal/Node/Financial Analysis/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Register Chart.js components\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    LineElement,\n    PointElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nfunction App() {\n    const [monthlyTotals, setMonthlyTotals] = useState(null);\n\n    useEffect(() => {\n        // Fetch the monthly totals data from the backend API\n        axios.get('/api/analysis/getMonthlyTotals').then(response => {\n            setMonthlyTotals(response.data);\n        }).catch(error => {\n            console.error('Error fetching monthly totals:', error);\n        });\n    }, []);\n\n    // Format amount with $ sign and two decimal places\n    const formatCurrency = (amount) => {\n        return `$${amount.toFixed(2)}`;\n    };\n\n    // Calculate the running average for the months with non-zero totals\n    const calculateRunningAverage = () => {\n        if (!monthlyTotals) return [];\n        const runningAverages = [];\n        let totalSum = 0;\n        let count = 0;\n\n        Object.values(monthlyTotals).forEach(total => {\n            if (total > 0) {\n                totalSum += total;\n                count++;\n                runningAverages.push(totalSum / count);  // Calculate running average\n            } else {\n                runningAverages.push(null);  // Use null to not display points for zero months\n            }\n        });\n\n        return runningAverages;\n    };\n\n    // Prepare chart data\n    const prepareChartData = () => {\n        if (!monthlyTotals) return {};\n\n        const labels = Object.keys(monthlyTotals);  // Month names as labels\n        const data = Object.values(monthlyTotals).map(total => total > 0 ? total : 0);  // Bar chart data\n\n        return {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Monthly Totals',\n                    data: data,\n                    backgroundColor: 'rgba(54, 162, 235, 0.5)',  // Light blue color for bars\n                    borderColor: 'rgba(54, 162, 235, 1)',\n                    borderWidth: 1,\n                    type: 'bar',\n                },\n                {\n                    label: 'Running Average',\n                    data: calculateRunningAverage(),\n                    borderColor: 'rgba(255, 99, 132, 1)',  // Red line for running average\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                    borderWidth: 2,\n                    fill: false,\n                    type: 'line',\n                    tension: 0.3,  // Smoothness of the line\n                    pointRadius: 3,\n                }\n            ]\n        };\n    };\n\n    return (\n        <div className=\"App\">\n            <header style={{ textAlign: 'center', padding: '20px', fontSize: '24px', fontWeight: 'bold' }}>\n                Financial Expense Analysis\n            </header>\n\n            {/* Responsive widget container */}\n            <div className=\"widgets-container\" style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                gap: '20px',  // Space between the widgets\n            }}>\n\n                {/* First Widget: Text Totals */}\n                <div className=\"widget\" style={{\n                    width: '500px',\n                    height: '500px',\n                    backgroundColor: '#e0f7fa',  // Light blue background\n                    borderRadius: '10px',\n                    padding: '20px',\n                    overflow: 'auto'\n                }}>\n                    <h3 style={{ textAlign: 'center' }}>Monthly Totals</h3>\n                    {monthlyTotals ? (\n                        <table style={{\n                            width: '100%',\n                            textAlign: 'left',\n                            borderCollapse: 'collapse',\n                            tableLayout: 'auto',\n                            margin: '0 auto',\n                        }}>\n                            <tbody>\n                            {Object.entries(monthlyTotals)\n                                .filter(([month, total]) => total > 0)  // Filter out totals less than or equal to zero\n                                .map(([month, total]) => (\n                                    <tr key={month}>\n                                        <td style={{\n                                            fontWeight: 'bold',\n                                            color: 'black',\n                                            padding: '10px'\n                                        }}>\n                                            {month}\n                                        </td>\n                                        <td style={{\n                                            color: 'black',\n                                            padding: '10px',\n                                            textAlign: 'right',\n                                            whiteSpace: 'nowrap'\n                                        }}>\n                                            {formatCurrency(total)}\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : (\n                        'Loading...'\n                    )}\n                </div>\n\n                {/* Second Widget: Column Graph */}\n                <div className=\"widget\" style={{\n                    width: '500px',\n                    height: '500px',\n                    backgroundColor: '#e0f7fa',  // Light blue background for the widget\n                    borderRadius: '10px',\n                    padding: '20px',\n                }}>\n                    <h3 style={{ textAlign: 'center' }}>Monthly Totals with Running Average</h3>\n                    {monthlyTotals ? (\n                        <Bar\n                            data={prepareChartData()}\n                            options={{\n                                scales: {\n                                    y: {\n                                        beginAtZero: true,\n                                        ticks: {\n                                            callback: function (value) {\n                                                return `$${value.toFixed(2)}`;  // Format Y-axis labels as currency\n                                            }\n                                        }\n                                    }\n                                }\n                            }}\n                        />\n                    ) : (\n                        'Loading...'\n                    )}\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}